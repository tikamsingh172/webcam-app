To generate OTP : https://4wex2d2cz0.execute-api.ap-south-1.amazonaws.com/default/lambda-staff-login

To validate OTP: https://218j49ra6l.execute-api.ap-south-1.amazonaws.com/default/lambda-staff-login-validate

To generate OTP: {"phone_number": "+919741116035"}

To validate OTP: Response from generate otp api
{
"session": " ",
"challengeParameters": {
"USERNAME": " ",
"answer": " "
}
}

Image Upload API: PUT
https://eww5a3ve13.execute-api.ap-south-1.amazonaws.com/default/lambda-upload-image-trigger

params
bucket='face-mementos' & property_folder='molecule_club_ifc' & qt_folder= 'qt_faces'  & camera_folder='camera_1' & filename='Molecule_Cam1_1.jpg'

Attach Image jpg file as binary

Authentication: Bearer Token: id_token




























import axios from "axios";
import React, { useRef, useCallback, useState, useEffect } from "react";
import Webcam from "react-webcam";

const App = () => {
  const webcamRef = useRef(null);
  const [hasWebcam, setHasWebcam] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    navigator.mediaDevices
      .enumerateDevices()
      .then((devices) => {
        const videoInput = devices.some(
          (device) => device.kind === "videoinput"
        );
        setHasWebcam(videoInput);
      })
      .catch((err) => {
        setError(err);
        console.error("Error accessing media devices.", err);
      });
  }, []);

  const capture = useCallback(async () => {
    const imageSrc = webcamRef.current.getScreenshot();
    if (!imageSrc) {
      console.error("No image captured.");
      return;
    }

    const formData = new FormData();
    const binaryImage = atob(imageSrc.split(",")[1]); // Decode the base64
    const array = [];
    for (let i = 0; i < binaryImage.length; i++) {
      array.push(binaryImage.charCodeAt(i));
    }
    const imageBlob = new Blob([new Uint8Array(array)], { type: "image/jpeg" });

    formData.append("bucket", "face-mementos");
    formData.append("property_folder", "molecule_club_ifc");
    formData.append("qt_folder", "qt_faces");
    formData.append("camera_folder", "camera_1");
    formData.append("filename", "Molecule_Cam1_1.jpg");
    formData.append("image", imageBlob, "Molecule_Cam1_1.jpg");

    try {
      const response = await axios.put(
        "https://eww5a3ve13.execute-api.ap-south-1.amazonaws.com/default/lambda-upload-image-trigger",
        formData, // Sending the FormData
        {
          headers: {
            "Content-Type": "multipart/form-data",
            Authorization: `Bearer eyJraWQiOiJmWUpIaDNCdVwvejM2Qk93RGgzTTNDTkxKT2xWY3o0MXIwYVwvYUJcL1V1VVpvPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJjMTAzMmRkYS1jMDMxLTcwZDAtNTUwZS02YzU2Mjk4ZjRjZDEiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuYXAtc291dGgtMS5hbWF6b25hd3MuY29tXC9hcC1zb3V0aC0xX01aZWo2UFloMCIsImNvZ25pdG86dXNlcm5hbWUiOiJjMTAzMmRkYS1jMDMxLTcwZDAtNTUwZS02YzU2Mjk4ZjRjZDEiLCJvcmlnaW5fanRpIjoiYWU2MGM1MDktZDc3Mi00ODgzLWE1MTUtMmYyYWNkMjQyMzM5IiwiYXVkIjoiM2ppaW41dWw0cHRjbDg2dWpqZ3NvYWo5dWkiLCJldmVudF9pZCI6IjZlODAzNzNkLTI0OWYtNDM4MS04OWMzLWM4YmE1ZWE0MGZjYiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNzE1ODgzNTE0LCJwaG9uZV9udW1iZXIiOiIrOTE5NzQxMTE2MDM1IiwiZXhwIjoxNzE1ODg3MTE0LCJpYXQiOjE3MTU4ODM1MTQsImp0aSI6ImRkNzM1YjBkLWU4YzItNDQ2Yi04MjMwLThhN2Q4YTkxN2IyNSJ9.HZ6B_NqOta79qd4CydkGAxLENUtcJ3Cm24_8YMPl-IQTfla3nTWWGq-U5LoCCjnZZV9qqdeyPRDSddkxbWxAlBVJdinJpzcU_L4ksdDcSaZtnc_Mnmiy8QOIiwFnTNiiK98ALFaxoqR_FItK75DuQeRxLvU7su4cqSlVHRioORdKc6B-HBdJ7vSvxMWnynTnaNRPK9ZpxwFNKHv4NOi8DCvmqOmwHr7X0e88vhQphPSxlOQ52BSniGaH1qdlCKtf42tbwgAD9_Sd9OxndNP8XT9CVarsk1Iqgf9yH_CjWkdy_lyb_XMrdX8nARhKC0fhzfc_zrkdGfBLFCmZRDndAw`,
          },
        }
      );
      console.log(response.data);
    } catch (error) {
      console.error("Error while uploading image:", error);
    }
  }, [webcamRef]);

  return (
    <>
      {error ? (
        <p>Error accessing the webcam: {error.message}</p>
      ) : hasWebcam ? (
        <>
          <Webcam audio={false} ref={webcamRef} screenshotFormat="image/jpeg" />
          <button onClick={capture}>Capture</button>
        </>
      ) : (
        <p>No webcam detected.</p>
      )}
    </>
  );
};

export default App;














bucket: face-mementos
property_folder: molecule_club_ifc
qt_folder: qt_faces
camera_folder: camera_1
filename: Molecule_Cam1_1.jpg

